% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cluster_CB_by_count_in_allele_matrix.R
\name{map_HLA_clusters}
\alias{map_HLA_clusters}
\title{Mapping the HLA clusters found by the 'HLA_clusters()' function back into the scrHLAtag count files}
\usage{
map_HLA_clusters(
  reads.list,
  cluster_coordinates,
  CB_rev_com = FALSE,
  additional_col_id = NULL,
  parallelize = FALSE
)
}
\arguments{
\item{reads.list}{is a scrHLAtag count file (or a list of scrHLAtag count files) including columns for CB, UMI, and HLA alleles (\url{https://github.com/furlan-lab/scrHLAtag}).}

\item{cluster_coordinates}{is the UMAP coordinates dataframe with HLA clustering information (found by the \code{scrHLAmatrix::HLA_clusters()} function) from which clusters are extracted and mapped into the scrHLAtag count files by matching Cell Barcodes.}

\item{CB_rev_com}{logical, called \code{TRUE} if the need to obtain the reverse complement of Cell Barcodes (CBs) is desired; default is \code{FALSE}.}

\item{additional_col_id}{is a character; if mapping of any additional column ID of the Seurat metadata collected in the \code{cluster_coordinates} dataframe, to the scrHLAtag count files is desired. \code{NULL} by default.}

\item{parallelize}{logical, called \code{TRUE} if using parallel processing (multi-threading) is desired; default is \code{FALSE}.}
}
\value{
a large list containing scrHLAtag count file(s) including columns for CB, UMI, and HLA alleles, with the addition of HLA_clusters
}
\description{
Mapping the HLA clusters found by the 'HLA_clusters()' function back into the scrHLAtag count files
}
\examples{
dirs_path <- "path/to/scrHLAtag/out/files"
dirs<-list.dirs(path=dirs_path, full.names = T, recursive = F)
dirs<- lapply(dirs, list.dirs, recursive = F) \%>\% unlist
dirs<- lapply(dirs, dir, pattern = "unguided_hla_align_corrected", recursive = F, full.names = T) \%>\% unlist
dirnames <- c("AML_101_BM", "AML_101_34", "TN_BM", "TN_34") # this is how the samples were organized in the directories
## Load the counts files
cts <- HLA_load(directories = dirs, dir_names = dirnames, seu = your_Seurat_obj)
## Process those count files
cts <- map_HLA_clusters(reads.list = cts, cluster_coordinates = UMAP_dataframe_from_HLA_clusters_function, additional_col_id = "geno")
}
